apiVersion: v1
kind: Service
metadata:
  name: redisinsight-service
  namespace: default
  labels:
    app: redisinsight
    project: lafleet
spec:
  selector:
    app: redisinsight
  type: ClusterIP
  ports:
    - name: redisinsight-service
      port: 80
      targetPort: 8001

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redisinsight
  labels:
    app: redisinsight
    project: lafleet
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redisinsight
      project: lafleet
  template:
    metadata:
      labels:
        app: redisinsight
        project: lafleet
    spec:
      initContainers:
        - name: init
          image: busybox
          command:
            - /bin/sh
            - '-c'
            - |
              chown -R 1001 /db
          resources: {}
          volumeMounts:
            - name: db
              mountPath: /db
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      containers:
      - name: redisinsight 
        image: redislabs/redisinsight:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: db
          mountPath: /db
        ports:
        - containerPort: 8001
          protocol: TCP
        livenessProbe:
           httpGet:
              path : /healthcheck/ # exposed RI endpoint for healthcheck
              port: 8001 # exposed container port
           initialDelaySeconds: 5 # number of seconds to wait after the container starts to perform liveness probe
           periodSeconds: 5 # period in seconds after which liveness probe is performed
           failureThreshold: 1 # number of liveness probe failures after which container restarts
      volumes:
      - name: db
        emptyDir: {}
      nodeSelector:
        nodegroup-type: backend-compute
      tolerations:
      - key: "dedicated-compute"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
